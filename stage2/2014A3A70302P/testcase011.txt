#Code generation testcase
_main[]
	matrix identity;
	string s1 ;
	s1 = "Hello World";
	print(s1);
	identity = [1,0,0;0,1;0,0,1] ;
	#Also experiment your result with
	# identity = [0,1,0;0,1,1;0,0,1] ;
	int isIdentityMat;
	int a,b,c;
	a =identity[0,0];
	b = identity[1,1];
	c = identity[2,2];
	isIdentityMat =0;
	int a1, a2;
	if ((a==1).and.((b==1).and.(c==1)))
		a1 = identity[0,1];
		a2 = identity[1,0];
		if( (a1 == 0).and.(a2 == 0))
			a1 = identity[2,1];
			a2 = identity[1,2];
			if((a1==0).and.(a2==0))
				a1 = identity[0,1];
				a2 = identity[0,2];
				if((a1==0).and.(a2==0))
					isIdentityMat = 1;
				endif;
			endif;
		endif;
	endif;
	print(isIdentityMat);
end
# Your code generator must generate the equivalent code in file code.asm using the ISA of NASM simulator.
# Execute the file code.asm in NASM and print value as 1 for identity matrix
#Challenge here is to construct the run time environment fixing the logical addresses for the matrix elements and other variables. Use off set information from the symbol table to construct the above and use that in the code generation.
